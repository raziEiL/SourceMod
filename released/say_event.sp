#define PLUGIN_VERSION "1.2"

#include <sourcemod>
#pragma semicolon 1

#define SAY_EVENT_LOG	 "logs\\say_event.log"

new		Handle:g_Event;
new		bool:g_l4d1 = false, bool:block = false;
new		g_CvarEnable;
new		String:logfilepath[256], String:Map[64];

public Plugin:myinfo = 
{
    name = "Say Event",
    author = "disawar1 [raziEiL]",
    description = "Displays triggered events.",
    version = PLUGIN_VERSION,
};
 
public OnPluginStart()
{
	BuildPath(Path_SM, logfilepath, sizeof(logfilepath), SAY_EVENT_LOG);
	LogToFile(logfilepath, "+-------------------------------------------+");
	LogToFile(logfilepath, "|               PLUGIN START                |");
	LogToFile(logfilepath, "+-------------------------------------------+");
	
	g_Event = CreateConVar("say_event_enable", "1", "Log Events: 0=Disable, 1=Enable");
	AutoExecConfig(true, "say_event");
	
	HookConVarChange(g_Event, OnPluginEnable);
	
	RegAdminCmd("event", SayEvent, ADMFLAG_KICK);
	
	Plugin();
}

static bool:chat;

public Action:SayEvent(client, agrs)
{
	chat = !chat;
}

public OnMapStart()
{
	LogToFile(logfilepath, "+-------------------------------------------+");
	LogToFile(logfilepath, "|                  MAP START                |");
	LogToFile(logfilepath, "+-------------------------------------------+");
	GetCurrentMap(Map, 64);
	LogToFile(logfilepath, "| \"%s\" |", Map);
}

public OnMapEnd()
{
	LogToFile(logfilepath, "+-------------------------------------------+");
	LogToFile(logfilepath, "|                  MAP END                  |");
	LogToFile(logfilepath, "+-------------------------------------------+");
}

public ClassicEvents(Handle:event, const String:name[], bool:dontBroadcast)
{
	LogToFile(logfilepath, "EVENT_HAPPENED ---> \"%s\" ", name);
	if (!chat) PrintToChatAll("\x05Event \"%s\" ", name);
}

public EventCallback(Handle:event, const String:name[], bool:dontBroadcast)
{
	LogToFile(logfilepath, "EVENT_HAPPENED :::: \"%s\" ", name);
	if (!chat) PrintToChatAll("\x04Event \"%s\" ", name);
}

public OnPluginEnable(Handle:convar_hndl, const String:oldValue[], const String:newValue[])
{
	Plugin();
}

public OnCVarChange(Handle:convar_hndl, const String:oldValue[], const String:newValue[])
{
	Plugin();
}

public OnConfigsExecuted()
{
	Plugin();
}

public Plugin()
{
	g_CvarEnable = GetConVarInt(g_Event);
	
	decl String:game[32];
	GetGameFolderName(game, sizeof(game));
	g_l4d1 = false;
	if(StrEqual(game, "left4dead"))
		g_l4d1 = true;
	
	if (block == false && g_CvarEnable == 1){
	
		block = true;
		
		if (g_l4d1)
		{
// 													=== Events: 155 ====	

			LogToFile(logfilepath, "GAME  \"%s\"", game);
			LogToFile(logfilepath, "HOOKED_EVENTS");
			PrintToChatAll("Hooked Events");	
			HookEvent("ability_use", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("achievement_earned", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("achievement_write_failed", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("ammo_pickup", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("area_cleared", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("award_earned", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("boomer_exploded", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("boomer_near", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("bot_player_replace", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("break_breakable", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("bullet_impact", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("choke_end", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("choke_start", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("choke_stopped", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("create_panic_event", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("difficulty_changed", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("door_close", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("door_moving", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("door_open", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("door_unlocked", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("drag_begin", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("drag_end", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("entity_shoved", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("entity_visible", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("explain_bridge", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("explain_church_door", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("explain_crane", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("explain_disturbance", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("explain_elevator_button", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("explain_emergency_door", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("explain_gas_can_panic", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("explain_gas_truck", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("explain_lift_button", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("explain_mainstreet", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("explain_panic_button", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("explain_pills", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("explain_pre_radio", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("explain_radio", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("explain_train_lever", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("explain_van_panic", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("explain_weapons", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("fatal_vomit", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("final_reportscreen", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("finale_escape_start", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("finale_radio_damaged", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("finale_radio_start", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("finale_rush", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("finale_start", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("finale_vehicle_leaving", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("finale_vehicle_ready", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("finale_win", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("friendly_fire", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("gameinstructor_draw", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("gameinstructor_nodraw", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("ghost_spawn_time", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("give_weapon", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("grenade_bounce", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("heal_begin", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("heal_end", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("heal_interrupted", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("heal_success", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("hegrenade_detonate", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("hostname_changed", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("hunter_headshot", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("hunter_punched", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("infected_death", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("infected_hurt", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("item_pickup", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("lunge_pounce", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("lunge_shove", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("map_transition", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("melee_kill", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("mission_lost", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("nav_blocked", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("nav_generate", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("non_pistol_fired", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("pills_used", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("pills_used_fail", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_afk", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_blind", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_blocked", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_bot_replace", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_death", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_entered_checkpoint", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_entered_start_area", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_falldamage", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_first_spawn", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_footstep", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_hurt", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_hurt_concise", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_incapacitated", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_incapacitated_start", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_jump", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_jump_apex", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_ledge_grab", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_ledge_release", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_left_checkpoint", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_left_start_area", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_no_longer_it", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_now_it", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_shoved", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_talking_state", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_team", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_transitioned", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("player_use", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("pounce_end", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("pounce_stopped", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("relocated", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("rescue_door_open", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("respawning", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("revive_begin", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("revive_end", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("revive_success", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("round_end_message", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("round_freeze_end", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("round_start_post_nav", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("round_start_pre_entity", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("spawner_give_item", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("spec_target_updated", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("started_pre_radio", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("success_checkpoint_button_used", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("survivor_call_for_help", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("survivor_rescue_abandoned", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("survivor_rescued", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("tank_frustrated", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("tank_killed", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("tank_spawn", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("tongue_broke_bent", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("tongue_broke_victim_died", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("tongue_grab", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("tongue_pull_stopped", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("tongue_release", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("use_target", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("vote_cast_no", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("vote_cast_yes", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("vote_changed", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("vote_ended", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("vote_failed", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("vote_passed", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("vote_started", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("waiting_checkpoint_button_used", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("waiting_checkpoint_door_used", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("waiting_door_used_versus", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("weapon_fire", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("weapon_fire_at_40", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("weapon_fire_on_empty", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("weapon_give_duplicate_fail", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("weapon_given", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("weapon_pickup", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("weapon_reload", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("weapon_zoom", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("witch_harasser_set", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("witch_killed", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("witch_spawn", ClassicEvents, EventHookMode_PostNoCopy);
			HookEvent("zombie_ignited", ClassicEvents, EventHookMode_PostNoCopy);
		}
		else
		{
// 											=== Events: 293 + 45 by Silver ====

			LogToFile(logfilepath, "GAME  \"%s\"", game);
			LogToFile(logfilepath, "HOOKED_EVENTS");
			PrintToChatAll("Hooked Events");
			HookEvent("ability_out_of_range", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("ability_use", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("achievement_earned", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("achievement_event", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("achievement_write_failed", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("adrenaline_used", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("ammo_pack_used", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("ammo_pack_used_fail_doesnt_use_ammo", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("ammo_pack_used_fail_full", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("ammo_pack_used_fail_no_weapon", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("ammo_pickup", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("ammo_pile_weapon_cant_use_ammo", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("area_cleared", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("award_earned", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("begin_scavenge_overtime", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("bonus_updated", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("boomer_exploded", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("boomer_near", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("bot_player_replace", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("break_breakable", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("break_breakable", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("break_prop", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("bullet_impact", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("c1m4_scavenge_instructions", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("chair_charged", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("charger_carry_end", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("charger_carry_start", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("charger_charge_end", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("charger_charge_start", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("charger_impact", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("charger_killed", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("charger_pummel_end", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("charger_pummel_start", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("choke_end", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("choke_start", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("choke_stopped", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("create_panic_event", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("dead_survivor_visible", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("defibrillator_begin", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("defibrillator_interrupted", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("defibrillator_used", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("defibrillator_used_fail", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("difficulty_changed", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("door_close", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("door_moving", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("door_open", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("door_unlocked", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("drag_begin", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("drag_end", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("entered_spit", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("entity_killed", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("entity_shoved", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("entity_visible", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_bodyshots_reduced", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_bridge", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_burger_sign", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_c1m4_finale", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_c2m4_ticketbooth", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_c3m4_radio1", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_c3m4_radio2", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_c3m4_rescue", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_c6m3_finale", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_carousel_button", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_carousel_destination", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_church_door", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_coaster", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_coaster_stop", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_crane", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_deactivate_alarm", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_decon", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_decon_wait", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_disturbance", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_drawbridge", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_elevator_button", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_emergency_door", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_ferry_button", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_float", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_gas_can_panic", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_gas_truck", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_gates_are_open", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_gun_shop", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_gun_shop_tanker", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_hatch_button", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_hotel_elevator_doors", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_impound_lot", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_item_glows_disabled", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_lift_button", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_mainstreet", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_mall_alarm", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_mall_window", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_need_gnome_to_continue", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_panic_button", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_perimeter", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_pills", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_pre_drawbridge", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_pre_radio", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_radio", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_rescue_disabled", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_return_item", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_save_items", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_scavenge_goal", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_scavenge_leave_area", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_sewer_gate", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_sewer_run", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_shack_button", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_stage_finale_start", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_stage_lighting", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_stage_pyrotechnics", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_stage_survival_start", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_store_alarm", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_store_item", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_store_item_stop", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_survival_alarm", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_survival_carousel", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_survival_generic", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_survival_radio", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_survivor_glows_disabled", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_train_lever", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_van_panic", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_vehicle_arrival", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_weapons", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("explain_witch_instant_kill", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("fatal_vomit", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("final_reportscreen", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("finale_bridge_lowering", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("finale_escape_start", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("finale_radio_damaged", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("finale_radio_start", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("finale_rush", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("finale_start", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("finale_vehicle_incoming", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("finale_vehicle_leaving", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("finale_vehicle_ready", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("finale_win", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("flare_ignite_npc", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("foot_locker_opened", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("friendly_fire", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("game_end", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("game_init", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("game_message", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("game_newmap", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("game_start", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("gameinstructor_draw", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("gameinstructor_nodraw", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("gas_can_forced_drop", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("gascan_dropped", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("gascan_pour_blocked", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("gascan_pour_completed", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("gascan_pour_interrupted", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("gauntlet_finale_start", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("ghost_spawn_time", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("give_weapon", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("grenade_bounce", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("heal_begin", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("heal_end", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("heal_interrupted", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("heal_success", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("hegrenade_detonate", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("helicopter_grenade_punt_miss", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("hostname_changed", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("hunter_headshot", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("hunter_punched", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("infected_death", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("infected_decapitated", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("infected_hurt", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("item_pickup", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("jockey_killed", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("jockey_ride", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("jockey_ride_end", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("lunge_pounce", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("lunge_shove", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("m60_streak_ended", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("map_transition", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("melee_kill", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("mission_lost", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("molotov_thrown", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("mounted_gun_overheated", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("mounted_gun_start", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("nav_blocked", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("nav_generate", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("non_melee_fired", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("non_pistol_fired", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("panic_event_finished", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("physgun_pickup", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("pills_used", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("pills_used_fail", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_activate", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_afk", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_blind", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_blocked", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_bot_replace", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_changename", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_chat", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_class", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_connect", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_death", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_death", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_death", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_disconnect", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_entered_checkpoint", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_entered_start_area", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_falldamage", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_first_spawn", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_footstep", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_hurt", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_hurt", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_hurt", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_hurt_concise", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_incapacitated", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_incapacitated_start", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_info", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_jump", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_jump_apex", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_ledge_grab", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_ledge_release", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_left_checkpoint", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_left_start_area", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_no_longer_it", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_now_it", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_say", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_score", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_shoot", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_shoved", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_spawn", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_talking_state", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_team", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_team", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_team", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_transitioned", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_use", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("player_use", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("pounce_end", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("pounce_stopped", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("punched_clown", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("ragdoll_dissolved", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("receive_upgrade", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("relocated", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("request_weapon_stats", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("rescue_door_open", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("respawning", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("revive_begin", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("revive_end", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("revive_success", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("round_end", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("round_end", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("round_end_message", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("round_freeze_end", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("round_start", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("round_start_post_nav", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("round_start_pre_entity", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("scavenge_gas_can_destroyed", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("scavenge_match_finished", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("scavenge_round_finished", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("scavenge_round_halftime", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("scavenge_round_start", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("scavenge_score_tied", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("server_addban", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("server_cvar", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("server_removeban", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("server_shutdown", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("server_spawn", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("set_instructor_group_enabled", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("song_played", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("spawner_give_item", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("spec_target_updated", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("spit_burst", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("spitter_killed", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("start_score_animation", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("started_pre_radio", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("stashwhacker_game_won", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("strongman_bell_knocked_off", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("success_checkpoint_button_used", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("survival_at_30min", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("survival_round_start", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("survivor_call_for_help", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("survivor_rescue_abandoned", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("survivor_rescued", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("tank_frustrated", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("tank_killed", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("tank_spawn", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("team_info", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("team_score", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("temp_c4m1_getgas", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("temp_c4m3_return_to_boat", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("tongue_broke_bent", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("tongue_grab", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("tongue_pull_stopped", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("tongue_release", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("total_ammo_below_40", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("triggered_car_alarm", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("upgrade_explosive_ammo", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("upgrade_failed_no_primary", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("upgrade_incendiary_ammo", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("upgrade_item_already_used", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("upgrade_pack_added", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("upgrade_pack_begin", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("upgrade_pack_used", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("use_target", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("user_data_downloaded", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("versus_marker_reached", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("versus_match_finished", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("versus_round_start", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("vomit_bomb_tank", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("vote_cast_no", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("vote_cast_yes", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("vote_changed", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("vote_ended", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("vote_failed", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("vote_passed", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("vote_started", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("waiting_checkpoint_button_used", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("waiting_checkpoint_door_used", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("waiting_door_used_versus", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("weapon_drop", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("weapon_fire", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("weapon_fire_at_40", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("weapon_fire_on_empty", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("weapon_given", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("weapon_pickup", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("weapon_reload", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("weapon_spawn_visible", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("weapon_zoom", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("witch_harasser_set", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("witch_killed", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("witch_spawn", EventCallback, EventHookMode_PostNoCopy);
			HookEvent("zombie_ignited", EventCallback, EventHookMode_PostNoCopy);
			// HookEvent("achievement_increment", EventCallback, EventHookMode_PostNoCopy);
			// HookEvent("alarm_trigger", EventCallback, EventHookMode_PostNoCopy);
			// HookEvent("extraction_start", EventCallback, EventHookMode_PostNoCopy);
			// HookEvent("extraction_stop", EventCallback, EventHookMode_PostNoCopy);
			// HookEvent("game_round_end", EventCallback, EventHookMode_PostNoCopy);
			// HookEvent("game_round_restart", EventCallback, EventHookMode_PostNoCopy);
			// HookEvent("game_round_start", EventCallback, EventHookMode_PostNoCopy);
			// HookEvent("iris_radio", EventCallback, EventHookMode_PostNoCopy);
			// HookEvent("material_check", EventCallback, EventHookMode_PostNoCopy);
			// HookEvent("player_location", EventCallback, EventHookMode_PostNoCopy);
			// HookEvent("server_msg", EventCallback, EventHookMode_PostNoCopy);
			// HookEvent("tongue_broke_victim_died", EventCallback, EventHookMode_PostNoCopy);
		}
	}
	else if (block == true && g_CvarEnable == 0){
	
		block = false;
		
		if (g_l4d1)
		{	
			LogToFile(logfilepath, "UNHOOKED_EVENTS");
			PrintToChatAll("Unhooked Events");
			UnhookEvent("ability_use", ClassicEvents);
			UnhookEvent("achievement_earned", ClassicEvents);
			UnhookEvent("achievement_write_failed", ClassicEvents);
			UnhookEvent("ammo_pickup", ClassicEvents);
			UnhookEvent("area_cleared", ClassicEvents);
			UnhookEvent("award_earned", ClassicEvents);
			UnhookEvent("boomer_exploded", ClassicEvents);
			UnhookEvent("boomer_near", ClassicEvents);
			UnhookEvent("bot_player_replace", ClassicEvents);
			UnhookEvent("break_breakable", ClassicEvents);
			UnhookEvent("bullet_impact", ClassicEvents);
			UnhookEvent("choke_end", ClassicEvents);
			UnhookEvent("choke_start", ClassicEvents);
			UnhookEvent("choke_stopped", ClassicEvents);
			UnhookEvent("create_panic_event", ClassicEvents);
			UnhookEvent("difficulty_changed", ClassicEvents);
			UnhookEvent("door_close", ClassicEvents);
			UnhookEvent("door_moving", ClassicEvents);
			UnhookEvent("door_open", ClassicEvents);
			UnhookEvent("door_unlocked", ClassicEvents);
			UnhookEvent("drag_begin", ClassicEvents);
			UnhookEvent("drag_end", ClassicEvents);
			UnhookEvent("entity_shoved", ClassicEvents);
			UnhookEvent("entity_visible", ClassicEvents);
			UnhookEvent("explain_bridge", ClassicEvents);
			UnhookEvent("explain_church_door", ClassicEvents);
			UnhookEvent("explain_crane", ClassicEvents);
			UnhookEvent("explain_disturbance", ClassicEvents);
			UnhookEvent("explain_elevator_button", ClassicEvents);
			UnhookEvent("explain_emergency_door", ClassicEvents);
			UnhookEvent("explain_gas_can_panic", ClassicEvents);
			UnhookEvent("explain_gas_truck", ClassicEvents);
			UnhookEvent("explain_lift_button", ClassicEvents);
			UnhookEvent("explain_mainstreet", ClassicEvents);
			UnhookEvent("explain_panic_button", ClassicEvents);
			UnhookEvent("explain_pills", ClassicEvents);
			UnhookEvent("explain_pre_radio", ClassicEvents);
			UnhookEvent("explain_radio", ClassicEvents);
			UnhookEvent("explain_train_lever", ClassicEvents);
			UnhookEvent("explain_van_panic", ClassicEvents);
			UnhookEvent("explain_weapons", ClassicEvents);
			UnhookEvent("fatal_vomit", ClassicEvents);
			UnhookEvent("final_reportscreen", ClassicEvents);
			UnhookEvent("finale_escape_start", ClassicEvents);
			UnhookEvent("finale_radio_damaged", ClassicEvents);
			UnhookEvent("finale_radio_start", ClassicEvents);
			UnhookEvent("finale_rush", ClassicEvents);
			UnhookEvent("finale_start", ClassicEvents);
			UnhookEvent("finale_vehicle_leaving", ClassicEvents);
			UnhookEvent("finale_vehicle_ready", ClassicEvents);
			UnhookEvent("finale_win", ClassicEvents);
			UnhookEvent("friendly_fire", ClassicEvents);
			UnhookEvent("gameinstructor_draw", ClassicEvents);
			UnhookEvent("gameinstructor_nodraw", ClassicEvents);
			UnhookEvent("ghost_spawn_time", ClassicEvents);
			UnhookEvent("give_weapon", ClassicEvents);
			UnhookEvent("grenade_bounce", ClassicEvents);
			UnhookEvent("heal_begin", ClassicEvents);
			UnhookEvent("heal_end", ClassicEvents);
			UnhookEvent("heal_interrupted", ClassicEvents);
			UnhookEvent("heal_success", ClassicEvents);
			UnhookEvent("hegrenade_detonate", ClassicEvents);
			UnhookEvent("hostname_changed", ClassicEvents);
			UnhookEvent("hunter_headshot", ClassicEvents);
			UnhookEvent("hunter_punched", ClassicEvents);
			UnhookEvent("infected_death", ClassicEvents);
			UnhookEvent("infected_hurt", ClassicEvents);
			UnhookEvent("item_pickup", ClassicEvents);
			UnhookEvent("lunge_pounce", ClassicEvents);
			UnhookEvent("lunge_shove", ClassicEvents);
			UnhookEvent("map_transition", ClassicEvents);
			UnhookEvent("melee_kill", ClassicEvents);
			UnhookEvent("mission_lost", ClassicEvents);
			UnhookEvent("nav_blocked", ClassicEvents);
			UnhookEvent("nav_generate", ClassicEvents);
			UnhookEvent("non_pistol_fired", ClassicEvents);
			UnhookEvent("pills_used", ClassicEvents);
			UnhookEvent("pills_used_fail", ClassicEvents);
			UnhookEvent("player_afk", ClassicEvents);
			UnhookEvent("player_blind", ClassicEvents);
			UnhookEvent("player_blocked", ClassicEvents);
			UnhookEvent("player_bot_replace", ClassicEvents);
			UnhookEvent("player_death", ClassicEvents);
			UnhookEvent("player_entered_checkpoint", ClassicEvents);
			UnhookEvent("player_entered_start_area", ClassicEvents);
			UnhookEvent("player_falldamage", ClassicEvents);
			UnhookEvent("player_first_spawn", ClassicEvents);
			UnhookEvent("player_footstep", ClassicEvents);
			UnhookEvent("player_hurt", ClassicEvents);
			UnhookEvent("player_hurt_concise", ClassicEvents);
			UnhookEvent("player_incapacitated", ClassicEvents);
			UnhookEvent("player_incapacitated_start", ClassicEvents);
			UnhookEvent("player_jump", ClassicEvents);
			UnhookEvent("player_jump_apex", ClassicEvents);
			UnhookEvent("player_ledge_grab", ClassicEvents);
			UnhookEvent("player_ledge_release", ClassicEvents);
			UnhookEvent("player_left_checkpoint", ClassicEvents);
			UnhookEvent("player_left_start_area", ClassicEvents);
			UnhookEvent("player_no_longer_it", ClassicEvents);
			UnhookEvent("player_now_it", ClassicEvents);
			UnhookEvent("player_shoved", ClassicEvents);
			UnhookEvent("player_talking_state", ClassicEvents);
			UnhookEvent("player_team", ClassicEvents);
			UnhookEvent("player_transitioned", ClassicEvents);
			UnhookEvent("player_use", ClassicEvents);
			UnhookEvent("pounce_end", ClassicEvents);
			UnhookEvent("pounce_stopped", ClassicEvents);
			UnhookEvent("relocated", ClassicEvents);
			UnhookEvent("rescue_door_open", ClassicEvents);
			UnhookEvent("respawning", ClassicEvents);
			UnhookEvent("revive_begin", ClassicEvents);
			UnhookEvent("revive_end", ClassicEvents);
			UnhookEvent("revive_success", ClassicEvents);
			UnhookEvent("round_end_message", ClassicEvents);
			UnhookEvent("round_freeze_end", ClassicEvents);
			UnhookEvent("round_start_post_nav", ClassicEvents);
			UnhookEvent("round_start_pre_entity", ClassicEvents);
			UnhookEvent("spawner_give_item", ClassicEvents);
			UnhookEvent("spec_target_updated", ClassicEvents);
			UnhookEvent("started_pre_radio", ClassicEvents);
			UnhookEvent("success_checkpoint_button_used", ClassicEvents);
			UnhookEvent("survivor_call_for_help", ClassicEvents);
			UnhookEvent("survivor_rescue_abandoned", ClassicEvents);
			UnhookEvent("survivor_rescued", ClassicEvents);
			UnhookEvent("tank_frustrated", ClassicEvents);
			UnhookEvent("tank_killed", ClassicEvents);
			UnhookEvent("tank_spawn", ClassicEvents);
			UnhookEvent("tongue_broke_bent", ClassicEvents);
			UnhookEvent("tongue_broke_victim_died", ClassicEvents);
			UnhookEvent("tongue_grab", ClassicEvents);
			UnhookEvent("tongue_pull_stopped", ClassicEvents);
			UnhookEvent("tongue_release", ClassicEvents);
			UnhookEvent("use_target", ClassicEvents);
			UnhookEvent("vote_cast_no", ClassicEvents);
			UnhookEvent("vote_cast_yes", ClassicEvents);
			UnhookEvent("vote_changed", ClassicEvents);
			UnhookEvent("vote_ended", ClassicEvents);
			UnhookEvent("vote_failed", ClassicEvents);
			UnhookEvent("vote_passed", ClassicEvents);
			UnhookEvent("vote_started", ClassicEvents);
			UnhookEvent("waiting_checkpoint_button_used", ClassicEvents);
			UnhookEvent("waiting_checkpoint_door_used", ClassicEvents);
			UnhookEvent("waiting_door_used_versus", ClassicEvents);
			UnhookEvent("weapon_fire", ClassicEvents);
			UnhookEvent("weapon_fire_at_40", ClassicEvents);
			UnhookEvent("weapon_fire_on_empty", ClassicEvents);
			UnhookEvent("weapon_give_duplicate_fail", ClassicEvents);
			UnhookEvent("weapon_given", ClassicEvents);
			UnhookEvent("weapon_pickup", ClassicEvents);
			UnhookEvent("weapon_reload", ClassicEvents);
			UnhookEvent("weapon_zoom", ClassicEvents);
			UnhookEvent("witch_harasser_set", ClassicEvents);
			UnhookEvent("witch_killed", ClassicEvents);
			UnhookEvent("witch_spawn", ClassicEvents);
			UnhookEvent("zombie_ignited", ClassicEvents);
			LogToFile(logfilepath, "+-------------------------------------------+");
			LogToFile(logfilepath, "|               PLUGIN DISABLE              |");
			LogToFile(logfilepath, "+-------------------------------------------+");
		}
		else
		{
			LogToFile(logfilepath, "UNHOOKED_EVENTS");
			PrintToChatAll("Unhooked Events");
			UnhookEvent("ability_out_of_range", EventCallback);
			UnhookEvent("ability_use", EventCallback);
			UnhookEvent("achievement_earned", EventCallback);
			UnhookEvent("achievement_event", EventCallback);
			UnhookEvent("achievement_write_failed", EventCallback);
			UnhookEvent("adrenaline_used", EventCallback);
			UnhookEvent("ammo_pack_used", EventCallback);
			UnhookEvent("ammo_pack_used_fail_doesnt_use_ammo", EventCallback);
			UnhookEvent("ammo_pack_used_fail_full", EventCallback);
			UnhookEvent("ammo_pack_used_fail_no_weapon", EventCallback);
			UnhookEvent("ammo_pickup", EventCallback);
			UnhookEvent("ammo_pile_weapon_cant_use_ammo", EventCallback);
			UnhookEvent("area_cleared", EventCallback);
			UnhookEvent("award_earned", EventCallback);
			UnhookEvent("begin_scavenge_overtime", EventCallback);
			UnhookEvent("bonus_updated", EventCallback);
			UnhookEvent("boomer_exploded", EventCallback);
			UnhookEvent("boomer_near", EventCallback);
			UnhookEvent("bot_player_replace", EventCallback);
			UnhookEvent("break_breakable", EventCallback);
			UnhookEvent("break_breakable", EventCallback);
			UnhookEvent("break_prop", EventCallback);
			UnhookEvent("bullet_impact", EventCallback);
			UnhookEvent("c1m4_scavenge_instructions", EventCallback);
			UnhookEvent("chair_charged", EventCallback);
			UnhookEvent("charger_carry_end", EventCallback);
			UnhookEvent("charger_carry_start", EventCallback);
			UnhookEvent("charger_charge_end", EventCallback);
			UnhookEvent("charger_charge_start", EventCallback);
			UnhookEvent("charger_impact", EventCallback);
			UnhookEvent("charger_killed", EventCallback);
			UnhookEvent("charger_pummel_end", EventCallback);
			UnhookEvent("charger_pummel_start", EventCallback);
			UnhookEvent("choke_end", EventCallback);
			UnhookEvent("choke_start", EventCallback);
			UnhookEvent("choke_stopped", EventCallback);
			UnhookEvent("create_panic_event", EventCallback);
			UnhookEvent("dead_survivor_visible", EventCallback);
			UnhookEvent("defibrillator_begin", EventCallback);
			UnhookEvent("defibrillator_interrupted", EventCallback);
			UnhookEvent("defibrillator_used", EventCallback);
			UnhookEvent("defibrillator_used_fail", EventCallback);
			UnhookEvent("difficulty_changed", EventCallback);
			UnhookEvent("door_close", EventCallback);
			UnhookEvent("door_moving", EventCallback);
			UnhookEvent("door_open", EventCallback);
			UnhookEvent("door_unlocked", EventCallback);
			UnhookEvent("drag_begin", EventCallback);
			UnhookEvent("drag_end", EventCallback);
			UnhookEvent("entered_spit", EventCallback);
			UnhookEvent("entity_killed", EventCallback);
			UnhookEvent("entity_shoved", EventCallback);
			UnhookEvent("entity_visible", EventCallback);
			UnhookEvent("explain_bodyshots_reduced", EventCallback);
			UnhookEvent("explain_bridge", EventCallback);
			UnhookEvent("explain_burger_sign", EventCallback);
			UnhookEvent("explain_c1m4_finale", EventCallback);
			UnhookEvent("explain_c2m4_ticketbooth", EventCallback);
			UnhookEvent("explain_c3m4_radio1", EventCallback);
			UnhookEvent("explain_c3m4_radio2", EventCallback);
			UnhookEvent("explain_c3m4_rescue", EventCallback);
			UnhookEvent("explain_c6m3_finale", EventCallback);
			UnhookEvent("explain_carousel_button", EventCallback);
			UnhookEvent("explain_carousel_destination", EventCallback);
			UnhookEvent("explain_church_door", EventCallback);
			UnhookEvent("explain_coaster", EventCallback);
			UnhookEvent("explain_coaster_stop", EventCallback);
			UnhookEvent("explain_crane", EventCallback);
			UnhookEvent("explain_deactivate_alarm", EventCallback);
			UnhookEvent("explain_decon", EventCallback);
			UnhookEvent("explain_decon_wait", EventCallback);
			UnhookEvent("explain_disturbance", EventCallback);
			UnhookEvent("explain_drawbridge", EventCallback);
			UnhookEvent("explain_elevator_button", EventCallback);
			UnhookEvent("explain_emergency_door", EventCallback);
			UnhookEvent("explain_ferry_button", EventCallback);
			UnhookEvent("explain_float", EventCallback);
			UnhookEvent("explain_gas_can_panic", EventCallback);
			UnhookEvent("explain_gas_truck", EventCallback);
			UnhookEvent("explain_gates_are_open", EventCallback);
			UnhookEvent("explain_gun_shop", EventCallback);
			UnhookEvent("explain_gun_shop_tanker", EventCallback);
			UnhookEvent("explain_hatch_button", EventCallback);
			UnhookEvent("explain_hotel_elevator_doors", EventCallback);
			UnhookEvent("explain_impound_lot", EventCallback);
			UnhookEvent("explain_item_glows_disabled", EventCallback);
			UnhookEvent("explain_lift_button", EventCallback);
			UnhookEvent("explain_mainstreet", EventCallback);
			UnhookEvent("explain_mall_alarm", EventCallback);
			UnhookEvent("explain_mall_window", EventCallback);
			UnhookEvent("explain_need_gnome_to_continue", EventCallback);
			UnhookEvent("explain_panic_button", EventCallback);
			UnhookEvent("explain_perimeter", EventCallback);
			UnhookEvent("explain_pills", EventCallback);
			UnhookEvent("explain_pre_drawbridge", EventCallback);
			UnhookEvent("explain_pre_radio", EventCallback);
			UnhookEvent("explain_radio", EventCallback);
			UnhookEvent("explain_rescue_disabled", EventCallback);
			UnhookEvent("explain_return_item", EventCallback);
			UnhookEvent("explain_save_items", EventCallback);
			UnhookEvent("explain_scavenge_goal", EventCallback);
			UnhookEvent("explain_scavenge_leave_area", EventCallback);
			UnhookEvent("explain_sewer_gate", EventCallback);
			UnhookEvent("explain_sewer_run", EventCallback);
			UnhookEvent("explain_shack_button", EventCallback);
			UnhookEvent("explain_stage_finale_start", EventCallback);
			UnhookEvent("explain_stage_lighting", EventCallback);
			UnhookEvent("explain_stage_pyrotechnics", EventCallback);
			UnhookEvent("explain_stage_survival_start", EventCallback);
			UnhookEvent("explain_store_alarm", EventCallback);
			UnhookEvent("explain_store_item", EventCallback);
			UnhookEvent("explain_store_item_stop", EventCallback);
			UnhookEvent("explain_survival_alarm", EventCallback);
			UnhookEvent("explain_survival_carousel", EventCallback);
			UnhookEvent("explain_survival_generic", EventCallback);
			UnhookEvent("explain_survival_radio", EventCallback);
			UnhookEvent("explain_survivor_glows_disabled", EventCallback);
			UnhookEvent("explain_train_lever", EventCallback);
			UnhookEvent("explain_van_panic", EventCallback);
			UnhookEvent("explain_vehicle_arrival", EventCallback);
			UnhookEvent("explain_weapons", EventCallback);
			UnhookEvent("explain_witch_instant_kill", EventCallback);
			UnhookEvent("fatal_vomit", EventCallback);
			UnhookEvent("final_reportscreen", EventCallback);
			UnhookEvent("finale_bridge_lowering", EventCallback);
			UnhookEvent("finale_escape_start", EventCallback);
			UnhookEvent("finale_radio_damaged", EventCallback);
			UnhookEvent("finale_radio_start", EventCallback);
			UnhookEvent("finale_rush", EventCallback);
			UnhookEvent("finale_start", EventCallback);
			UnhookEvent("finale_vehicle_incoming", EventCallback);
			UnhookEvent("finale_vehicle_leaving", EventCallback);
			UnhookEvent("finale_vehicle_ready", EventCallback);
			UnhookEvent("finale_win", EventCallback);
			UnhookEvent("flare_ignite_npc", EventCallback);
			UnhookEvent("foot_locker_opened", EventCallback);
			UnhookEvent("friendly_fire", EventCallback);
			UnhookEvent("game_end", EventCallback);
			UnhookEvent("game_init", EventCallback);
			UnhookEvent("game_message", EventCallback);
			UnhookEvent("game_newmap", EventCallback);
			UnhookEvent("game_start", EventCallback);
			UnhookEvent("gameinstructor_draw", EventCallback);
			UnhookEvent("gameinstructor_nodraw", EventCallback);
			UnhookEvent("gas_can_forced_drop", EventCallback);
			UnhookEvent("gascan_dropped", EventCallback);
			UnhookEvent("gascan_pour_blocked", EventCallback);
			UnhookEvent("gascan_pour_completed", EventCallback);
			UnhookEvent("gascan_pour_interrupted", EventCallback);
			UnhookEvent("gauntlet_finale_start", EventCallback);
			UnhookEvent("ghost_spawn_time", EventCallback);
			UnhookEvent("give_weapon", EventCallback);
			UnhookEvent("grenade_bounce", EventCallback);
			UnhookEvent("heal_begin", EventCallback);
			UnhookEvent("heal_end", EventCallback);
			UnhookEvent("heal_interrupted", EventCallback);
			UnhookEvent("heal_success", EventCallback);
			UnhookEvent("hegrenade_detonate", EventCallback);
			UnhookEvent("helicopter_grenade_punt_miss", EventCallback);
			UnhookEvent("hostname_changed", EventCallback);
			UnhookEvent("hunter_headshot", EventCallback);
			UnhookEvent("hunter_punched", EventCallback);
			UnhookEvent("infected_death", EventCallback);
			UnhookEvent("infected_decapitated", EventCallback);
			UnhookEvent("infected_hurt", EventCallback);
			UnhookEvent("item_pickup", EventCallback);
			UnhookEvent("jockey_killed", EventCallback);
			UnhookEvent("jockey_ride", EventCallback);
			UnhookEvent("jockey_ride_end", EventCallback);
			UnhookEvent("lunge_pounce", EventCallback);
			UnhookEvent("lunge_shove", EventCallback);
			UnhookEvent("m60_streak_ended", EventCallback);
			UnhookEvent("map_transition", EventCallback);
			UnhookEvent("melee_kill", EventCallback);
			UnhookEvent("mission_lost", EventCallback);
			UnhookEvent("molotov_thrown", EventCallback);
			UnhookEvent("mounted_gun_overheated", EventCallback);
			UnhookEvent("mounted_gun_start", EventCallback);
			UnhookEvent("nav_blocked", EventCallback);
			UnhookEvent("nav_generate", EventCallback);
			UnhookEvent("non_melee_fired", EventCallback);
			UnhookEvent("non_pistol_fired", EventCallback);
			UnhookEvent("panic_event_finished", EventCallback);
			UnhookEvent("physgun_pickup", EventCallback);
			UnhookEvent("pills_used", EventCallback);
			UnhookEvent("pills_used_fail", EventCallback);
			UnhookEvent("player_activate", EventCallback);
			UnhookEvent("player_afk", EventCallback);
			UnhookEvent("player_blind", EventCallback);
			UnhookEvent("player_blocked", EventCallback);
			UnhookEvent("player_bot_replace", EventCallback);
			UnhookEvent("player_changename", EventCallback);
			UnhookEvent("player_chat", EventCallback);
			UnhookEvent("player_class", EventCallback);
			UnhookEvent("player_connect", EventCallback);
			UnhookEvent("player_death", EventCallback);
			UnhookEvent("player_death", EventCallback);
			UnhookEvent("player_death", EventCallback);
			UnhookEvent("player_disconnect", EventCallback);
			UnhookEvent("player_entered_checkpoint", EventCallback);
			UnhookEvent("player_entered_start_area", EventCallback);
			UnhookEvent("player_falldamage", EventCallback);
			UnhookEvent("player_first_spawn", EventCallback);
			UnhookEvent("player_footstep", EventCallback);
			UnhookEvent("player_hurt", EventCallback);
			UnhookEvent("player_hurt", EventCallback);
			UnhookEvent("player_hurt", EventCallback);
			UnhookEvent("player_hurt_concise", EventCallback);
			UnhookEvent("player_incapacitated", EventCallback);
			UnhookEvent("player_incapacitated_start", EventCallback);
			UnhookEvent("player_info", EventCallback);
			UnhookEvent("player_jump", EventCallback);
			UnhookEvent("player_jump_apex", EventCallback);
			UnhookEvent("player_ledge_grab", EventCallback);
			UnhookEvent("player_ledge_release", EventCallback);
			UnhookEvent("player_left_checkpoint", EventCallback);
			UnhookEvent("player_left_start_area", EventCallback);
			UnhookEvent("player_no_longer_it", EventCallback);
			UnhookEvent("player_now_it", EventCallback);
			UnhookEvent("player_say", EventCallback);
			UnhookEvent("player_score", EventCallback);
			UnhookEvent("player_shoot", EventCallback);
			UnhookEvent("player_shoved", EventCallback);
			UnhookEvent("player_spawn", EventCallback);
			UnhookEvent("player_talking_state", EventCallback);
			UnhookEvent("player_team", EventCallback);
			UnhookEvent("player_team", EventCallback);
			UnhookEvent("player_team", EventCallback);
			UnhookEvent("player_transitioned", EventCallback);
			UnhookEvent("player_use", EventCallback);
			UnhookEvent("player_use", EventCallback);
			UnhookEvent("pounce_end", EventCallback);
			UnhookEvent("pounce_stopped", EventCallback);
			UnhookEvent("punched_clown", EventCallback);
			UnhookEvent("ragdoll_dissolved", EventCallback);
			UnhookEvent("receive_upgrade", EventCallback);
			UnhookEvent("relocated", EventCallback);
			UnhookEvent("request_weapon_stats", EventCallback);
			UnhookEvent("rescue_door_open", EventCallback);
			UnhookEvent("respawning", EventCallback);
			UnhookEvent("revive_begin", EventCallback);
			UnhookEvent("revive_end", EventCallback);
			UnhookEvent("revive_success", EventCallback);
			UnhookEvent("round_end", EventCallback);
			UnhookEvent("round_end", EventCallback);
			UnhookEvent("round_end_message", EventCallback);
			UnhookEvent("round_freeze_end", EventCallback);
			UnhookEvent("round_start", EventCallback);
			UnhookEvent("round_start_post_nav", EventCallback);
			UnhookEvent("round_start_pre_entity", EventCallback);
			UnhookEvent("scavenge_gas_can_destroyed", EventCallback);
			UnhookEvent("scavenge_match_finished", EventCallback);
			UnhookEvent("scavenge_round_finished", EventCallback);
			UnhookEvent("scavenge_round_halftime", EventCallback);
			UnhookEvent("scavenge_round_start", EventCallback);
			UnhookEvent("scavenge_score_tied", EventCallback);
			UnhookEvent("server_addban", EventCallback);
			UnhookEvent("server_cvar", EventCallback);
			UnhookEvent("server_removeban", EventCallback);
			UnhookEvent("server_shutdown", EventCallback);
			UnhookEvent("server_spawn", EventCallback);
			UnhookEvent("set_instructor_group_enabled", EventCallback);
			UnhookEvent("song_played", EventCallback);
			UnhookEvent("spawner_give_item", EventCallback);
			UnhookEvent("spec_target_updated", EventCallback);
			UnhookEvent("spit_burst", EventCallback);
			UnhookEvent("spitter_killed", EventCallback);
			UnhookEvent("start_score_animation", EventCallback);
			UnhookEvent("started_pre_radio", EventCallback);
			UnhookEvent("stashwhacker_game_won", EventCallback);
			UnhookEvent("strongman_bell_knocked_off", EventCallback);
			UnhookEvent("success_checkpoint_button_used", EventCallback);
			UnhookEvent("survival_at_30min", EventCallback);
			UnhookEvent("survival_round_start", EventCallback);
			UnhookEvent("survivor_call_for_help", EventCallback);
			UnhookEvent("survivor_rescue_abandoned", EventCallback);
			UnhookEvent("survivor_rescued", EventCallback);
			UnhookEvent("tank_frustrated", EventCallback);
			UnhookEvent("tank_killed", EventCallback);
			UnhookEvent("tank_spawn", EventCallback);
			UnhookEvent("team_info", EventCallback);
			UnhookEvent("team_score", EventCallback);
			UnhookEvent("temp_c4m1_getgas", EventCallback);
			UnhookEvent("temp_c4m3_return_to_boat", EventCallback);
			UnhookEvent("tongue_broke_bent", EventCallback);
			UnhookEvent("tongue_grab", EventCallback);
			UnhookEvent("tongue_pull_stopped", EventCallback);
			UnhookEvent("tongue_release", EventCallback);
			UnhookEvent("total_ammo_below_40", EventCallback);
			UnhookEvent("triggered_car_alarm", EventCallback);
			UnhookEvent("upgrade_explosive_ammo", EventCallback);
			UnhookEvent("upgrade_failed_no_primary", EventCallback);
			UnhookEvent("upgrade_incendiary_ammo", EventCallback);
			UnhookEvent("upgrade_item_already_used", EventCallback);
			UnhookEvent("upgrade_pack_added", EventCallback);
			UnhookEvent("upgrade_pack_begin", EventCallback);
			UnhookEvent("upgrade_pack_used", EventCallback);
			UnhookEvent("use_target", EventCallback);
			UnhookEvent("user_data_downloaded", EventCallback);
			UnhookEvent("versus_marker_reached", EventCallback);
			UnhookEvent("versus_match_finished", EventCallback);
			UnhookEvent("versus_round_start", EventCallback);
			UnhookEvent("vomit_bomb_tank", EventCallback);
			UnhookEvent("vote_cast_no", EventCallback);
			UnhookEvent("vote_cast_yes", EventCallback);
			UnhookEvent("vote_changed", EventCallback);
			UnhookEvent("vote_ended", EventCallback);
			UnhookEvent("vote_failed", EventCallback);
			UnhookEvent("vote_passed", EventCallback);
			UnhookEvent("vote_started", EventCallback);
			UnhookEvent("waiting_checkpoint_button_used", EventCallback);
			UnhookEvent("waiting_checkpoint_door_used", EventCallback);
			UnhookEvent("waiting_door_used_versus", EventCallback);
			UnhookEvent("weapon_drop", EventCallback);
			UnhookEvent("weapon_fire", EventCallback);
			UnhookEvent("weapon_fire_at_40", EventCallback);
			UnhookEvent("weapon_fire_on_empty", EventCallback);
			UnhookEvent("weapon_given", EventCallback);
			UnhookEvent("weapon_pickup", EventCallback);
			UnhookEvent("weapon_reload", EventCallback);
			UnhookEvent("weapon_spawn_visible", EventCallback);
			UnhookEvent("weapon_zoom", EventCallback);
			UnhookEvent("witch_harasser_set", EventCallback);
			UnhookEvent("witch_killed", EventCallback);
			UnhookEvent("witch_spawn", EventCallback);
			UnhookEvent("zombie_ignited", EventCallback);
			// UnhookEvent("achievement_increment", EventCallback);
			// UnhookEvent("alarm_trigger", EventCallback);
			// UnhookEvent("extraction_start", EventCallback);
			// UnhookEvent("extraction_stop", EventCallback);
			// UnhookEvent("game_round_end", EventCallback);
			// UnhookEvent("game_round_restart", EventCallback);
			// UnhookEvent("game_round_start", EventCallback);
			// UnhookEvent("iris_radio", EventCallback);
			// UnhookEvent("material_check", EventCallback);
			// UnhookEvent("player_location", EventCallback);
			// UnhookEvent("server_msg", EventCallback);
			// UnhookEvent("tongue_broke_victim_died", EventCallback);
			LogToFile(logfilepath, "+-------------------------------------------+");
			LogToFile(logfilepath, "|               PLUGIN DISABLE              |");
			LogToFile(logfilepath, "+-------------------------------------------+");
		}
	}
}